

def BodyMeasurement(study, measurement) {
    var subject_id: measurement.participant_external_id;
    var value: measurement.measure_value;
    var measure_type: measurement.condition_or_measure_source_text;

    if (measurement.measure_unit ~= "NA") {
        var unitcode: HarmonizeMappedFirst(measurement.measure_unit, "units");
    }

    // EST - 2023-3-9 - After talking with Pierrette, she will make sure that
    //     all of the units are present, but I'm leaving this in for now in case
    //     that doesn't happen and I need to resort back to this approach to fill
    //     in gaps while I await her fixes. 
    // Some rows have units and others don't so we'll just use the measurement
    // type and assume that they didn't use something weird
    //if (measurement.measure_unit = "NA") {
    //    var unitcode: HarmonizeMappedFirst(measure_type, "units");
    //}

    identifier[]: Key_Identifier(study, "Observation", Build_Measurement_id(study, "measurement", measurement, $StrCat(measure_type, ".", $StrJoin(".", $StrSplit(value, " ")))));
    identifier[0].use: "official";
    subject: Reference_Global_ID("Patient", measurement.participant_global_id);

    meta.tag[]: StudyMeta(study);
    // var varcode: HarmonizeMapped(measurement.condition_or_measure_source_text, "condition_description");
    code.coding: HarmonizeMapped(measure_type, "condition_description");
    if (measure_type = "BMI") {
        //meta.profile[]: "http://hl7.org/fhir/us/core/StructureDefinition/us-core-bmi";
        //code.coding[0]!: BuildCoding("39156-5", "BMI", "http://loinc.org");

    }
    if (measure_type = "Weight") {
        //meta.profile[]: "http://hl7.org/fhir/us/core/StructureDefinition/us-core-body-weight"
        //code.coding[0]!: BuildCoding("29463-7", "Body weight", "http://loinc.org");
    }
    if (measure_type = "Height") {
        //meta.profile[]: "http://hl7.org/fhir/us/core/StructureDefinition/us-core-body-height"
        //code.coding[0]!: BuildCoding("8302-2", "Body height", "http://loinc.org");
    }
    code.text: measurement.other_label;

    category[].coding[]: BuildCoding("vital-signs", "Vital Signs", "http://terminology.hl7.org/CodeSystem/observation-category");

    encounter (if measurement.event_id ~= "NA"): Reference_Key_Identifier(study, "Encounter", Build_Encounter_ID(study, measurement));

    if (measurement.age_at_condition_or_measure_observation?) {
        _effectiveDateTime.extension[0] (if measurement.age_at_condition_or_measure_observation ~= "NA"): AgeAtExtension(study, measurement.participant_global_id, measurement.age_at_condition_or_measure_observation, "days");
    }
    status: "final";
    resourceType: "Observation";

    valueQuantity.value: $ParseFloat(value);
    valueQuantity.unit: unitcode.display;
    valueQuantity.system: unitcode.system;
    valueQuantity.code: unitcode.code;
}


