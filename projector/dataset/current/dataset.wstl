
def DatasetEntry(study, file) {
    item: Reference_Key_Identifier(study, "DocumentReference",  DocumentReferenceID(study, file.file_name));
}

def Dataset(study, studymeta, dataset) {
    meta.tag[]: StudyMeta(study)
    // meta.profile[]: "TBD - If/when we create a profile"
    resourceType: "List"

    title: dataset.dataset_name;

    if (dataset.dataset_global_id ~= "TBD") {
        id: dataset.dataset_global_id;
        identifier[]: Key_Identifier(study, "List", dataset.dataset_global_id);
        // identifier[1]: Key_Identifier(study, "List", dataset.dataset_external_id);
    } 
    identifier[]: Key_Identifier(study, "List", dataset.dataset_external_id);
    identifier[0].use: "official";

    entry[]: DatasetEntry(study, dataset.dataset_manifest[]);
    
}

def ProcessDataset(study, studymeta, datasets) {
    out dataset_resources: Dataset(study, studymeta, datasets[]);
    out dataset_resources: DatasetMetadataObservation(study, datasets[]);
}