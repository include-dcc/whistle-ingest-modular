//
def BuildMetadataComponent(code, datatype, value) {
    if (value?) {
        code: HarmonizeMappedFirst(code, "dataset_meta");

        if (datatype = "code") {
            valueCodeableConcept.coding[]: value;
        } 
        if (datatype = "string") {
            valueString: value;
        }
        if (datatype = "integer") {
            valueInteger: $ParseInt(value);
        }
    }
}

def DatasetMetadataObservation(study, dataset) {
    meta.tag[]: StudyMeta(study);
    
    if (dataset.dataset_global_id ~= "TBD") {
        id: dataset.dataset_global_id;
        identifier[]: Key_Identifier(study, "List", dataset.dataset_global_id);
        // identifier[1]: Key_Identifier(study, "List", dataset.dataset_external_id);
    } 

    identifier[]: Key_Identifier(study, "Observation", $StrCat("Dataset-Metadata-", dataset.dataset_external_id));
    identifier[0].use: "official";

    // This is technically how you are expected to link to ODs, but it isn't working in the current version of FHIR
    // basedOn[].identifier: Key_Identifier(study, "ObservationDefinition", DdVariableId(study.id, tablename, varname));
    code.text: "Dataset";
    code.coding[]: BuildCoding("D064886", "Dataset", "urn:oid:2.16.840.1.113883.6.177");

    status: "final";
    resourceType: "Observation";

    component[]: BuildMetadataComponent("Study Code", "code", HarmonizeMappedFirst(dataset.study_code, "Study Code"))
    component[]: BuildMetadataComponent("Dataset Name", "string", dataset.dataset_name);
    component[]: BuildMetadataComponent("Dataset Description", "string", dataset.dataset_description)
    component[]: BuildMetadataComponent("Expected Number of Participants", "integer", dataset.expected_number_of_participants);
    component[]: BuildMetadataComponent("Expected Number of Files", "integer", dataset.expected_number_of_files);

    dataset_values: dataset;
    
}

