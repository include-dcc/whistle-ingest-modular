//
def BuildMetadataComponent(code, datatype, value) {
    if (value?) {
        code.coding[]: HarmonizeMappedFirst(code, "dataset_meta");
        
        if (datatype = "code") {
            valueCodeableConcept.coding[]: value;
        } 
        if (datatype = "string") {
            valueString: value;
        }
        if (datatype = "integer") {
            valueInteger: $ParseInt(value);
        }
    }
}

def DatasetMetadataObservation(study, dataset) {
    meta.tag[]: StudyMeta(study);
    
    if (dataset.dataset_global_id ~= "TBD") {
        // id: dataset.dataset_global_id;
        identifier[]: Key_Identifier(study, "Observation", dataset.dataset_global_id);
        // identifier[1]: Key_Identifier(study, "Observation", dataset.dataset_external_id);
    } 

    identifier[]: Key_Identifier(study, "Observation", $StrCat("Dataset-Metadata-", dataset.dataset_external_id));
    identifier[0].use: "official";

    // This is technically how you are expected to link to ODs, but it isn't working in the current version of FHIR
    // basedOn[].identifier: Key_Identifier(study, "ObservationDefinition", DdVariableId(study.id, tablename, varname));
    code.text: "Dataset";
    code.coding[]: BuildCoding("D064886", "Dataset", "urn:oid:2.16.840.1.113883.6.177");

    status: "final";
    resourceType: "Observation";

    component[]: BuildMetadataComponent("Study Code", "code", HarmonizeMappedFirst(dataset.study_code, "Study Code"))
    component[]: BuildMetadataComponent("Dataset Name", "string", dataset.dataset_name);
    component[]: BuildMetadataComponent("Dataset Description", "string", dataset.dataset_description)
    component[]: BuildMetadataComponent("Expected Number of Participants", "integer", dataset.expected_number_of_participants);
    component[]: BuildMetadataComponent("Expected Number of Files", "integer", dataset.expected_number_of_files);

    component[]: BuildMetadataComponent("Data Collection Start Year", "string", dataset.data_collection_start_year);
    component[]: BuildMetadataComponent("Data Collection End Year", "string", dataset.data_collection_end_year);

    component[]: BuildMetadataComponent("Data Category", "code", HarmonizeMappedFirst(dataset.data_category, "Data Category"))
    var data_types: $StrSplit(dataset.data_type, "|");
    component[]: BuildMetadataComponent("Data Type", "string", data_types[])
    component[]: BuildMetadataComponent("Experimental Strategy", "string", dataset.experimental_strategy)
    component[]: BuildMetadataComponent("Experimental Platform", "string", dataset.experimental_platform)
    component[]: BuildMetadataComponent("Publication", "string", dataset.publication)
    component[]: BuildMetadataComponent("Access Limitations", "string", dataset.access_limitations)
    component[]: BuildMetadataComponent("Access Requirements", "string", dataset.access_requirements)
    component[]: BuildMetadataComponent("dbGaP", "string", dataset.dbgap)
    
    component[]: BuildMetadataComponent("Is Harmonized", "boolean", dataset.is_harmonized)

}

